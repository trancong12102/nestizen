/**
 * -----------------------------------------------------------------------------
 * WARNING:
 * This file is auto-generated by @nestizen/graphql-plugin.
 * Changes to this file will be lost if the code is regenerated.
 * -----------------------------------------------------------------------------
 */

import type { Category, Prisma } from '@zenstackhq/runtime/models';
import { PrismaService } from '../../../prisma/prisma.service';

export class CategoryServiceBase {
  constructor(public readonly prisma: PrismaService) {}

  async findUnique(args: Prisma.CategoryFindUniqueArgs) {
    return this.prisma.client.category.findUnique(args);
  }

  async findMany(args: Prisma.CategoryFindManyArgs) {
    return this.prisma.client.category.findMany(args);
  }

  async create(args: Prisma.CategoryCreateArgs) {
    return this.prisma.client.category.create(args);
  }

  async update(args: Prisma.CategoryUpdateArgs) {
    return this.prisma.client.category.update(args);
  }

  async delete(args: Prisma.CategoryDeleteArgs) {
    return this.prisma.client.category.delete(args);
  }

  async count(args: Prisma.CategoryCountArgs) {
    return this.prisma.client.category.count(args);
  }

  async aggregate(args: Prisma.CategoryAggregateArgs) {
    return this.prisma.client.category.aggregate(args);
  }

  async resolvePosts(parent: Category, args: Prisma.PostFindManyArgs) {
    return this.prisma.client.category
      .findUniqueOrThrow({
        where: { id: parent.id },
      })
      .posts(args);
  }

  async resolveMetadata(parent: Category) {
    return this.prisma.client.category
      .findUniqueOrThrow({
        where: { id: parent.id },
      })
      .metadata();
  }
}
