/**
 * -----------------------------------------------------------------------------
 * WARNING:
 * This file is auto-generated by @nestizen/graphql-plugin.
 * Changes to this file will be lost if the code is regenerated.
 * -----------------------------------------------------------------------------
 */

import type { Post, Prisma } from '@zenstackhq/runtime/models';
import { PrismaService } from '../../../prisma/prisma.service';

export class PostServiceBase {
  constructor(public readonly prisma: PrismaService) {}

  async findUnique(args: Prisma.PostFindUniqueArgs) {
    return this.prisma.client.post.findUnique(args);
  }

  async findMany(args: Prisma.PostFindManyArgs) {
    return this.prisma.client.post.findMany(args);
  }

  async create(args: Prisma.PostCreateArgs) {
    return this.prisma.client.post.create(args);
  }

  async update(args: Prisma.PostUpdateArgs) {
    return this.prisma.client.post.update(args);
  }

  async delete(args: Prisma.PostDeleteArgs) {
    return this.prisma.client.post.delete(args);
  }

  async count(args: Prisma.PostCountArgs) {
    return this.prisma.client.post.count(args);
  }

  async aggregate(args: Prisma.PostAggregateArgs) {
    return this.prisma.client.post.aggregate(args);
  }

  async resolveAuthor(parent: Post) {
    return this.prisma.client.post
      .findUniqueOrThrow({
        where: { id: parent.id },
      })
      .author();
  }

  async resolveAnotherAuthor(parent: Post) {
    return this.prisma.client.post
      .findUniqueOrThrow({
        where: { id: parent.id },
      })
      .anotherAuthor();
  }

  async resolveCategories(parent: Post, args: Prisma.CategoryFindManyArgs) {
    return this.prisma.client.post
      .findUniqueOrThrow({
        where: { id: parent.id },
      })
      .categories(args);
  }
}
