/**
 * -----------------------------------------------------------------------------
 * WARNING:
 * This file is auto-generated by @nestizen/graphql-plugin.
 * Changes to this file will be lost if the code is regenerated.
 * -----------------------------------------------------------------------------
 */

import type { CategoryMetadata, Prisma } from '@zenstackhq/runtime/models';
import { PrismaService } from '../../../prisma/prisma.service';

export class CategoryMetadataServiceBase {
  constructor(public readonly prisma: PrismaService) {}

  async findUnique(args: Prisma.CategoryMetadataFindUniqueArgs) {
    return this.prisma.client.categoryMetadata.findUnique(args);
  }

  async findMany(args: Prisma.CategoryMetadataFindManyArgs) {
    return this.prisma.client.categoryMetadata.findMany(args);
  }

  async create(args: Prisma.CategoryMetadataCreateArgs) {
    return this.prisma.client.categoryMetadata.create(args);
  }

  async update(args: Prisma.CategoryMetadataUpdateArgs) {
    return this.prisma.client.categoryMetadata.update(args);
  }

  async delete(args: Prisma.CategoryMetadataDeleteArgs) {
    return this.prisma.client.categoryMetadata.delete(args);
  }

  async count(args: Prisma.CategoryMetadataCountArgs) {
    return this.prisma.client.categoryMetadata.count(args);
  }

  async aggregate(args: Prisma.CategoryMetadataAggregateArgs) {
    return this.prisma.client.categoryMetadata.aggregate(args);
  }

  async resolveCategory(parent: CategoryMetadata) {
    return this.prisma.client.categoryMetadata
      .findUniqueOrThrow({
        where: { id: parent.id },
      })
      .category();
  }
}
